// var counter = 0;
// var max = args.Length != 0 ? Convert.ToInt32(args[0]) : -1;
// while (max == -1 || counter < max)
// {
//     Console.WriteLine($"Counter: {++counter}");
//     await Task.Delay(TimeSpan.FromMilliseconds(1_000));
// }


using System;
using System.Threading.Tasks;
using Amazon;
using Amazon.Runtime.CredentialManagement;
// To interact with Amazon S3.
using Amazon.S3;
using Amazon.S3.Model;

// Create an S3 client object.
//var s3Client = new AmazonS3Client();
AddRegion("default", RegionEndpoint.APSouth1);
void AddRegion(string profileName, RegionEndpoint region)
{
    var sharedFile = new SharedCredentialsFile();
    CredentialProfile profile;
    if (sharedFile.TryGetProfile(profileName, out profile))
    {
        profile.Region = region;
        sharedFile.RegisterProfile(profile);
    }
}


var s3Client = new AmazonS3Client(new Amazon.Runtime.Credentials(''), RegionEndpoint.USEast1);                     

Console.WriteLine("\nGetting a list of your buckets...");
var listResponse = await MyListBucketsAsync(s3Client);
Console.WriteLine($"Number of buckets: {listResponse.Buckets.Count}");
foreach(S3Bucket b in listResponse.Buckets)
{
Console.WriteLine(b.BucketName);
}

// Async method to get a list of Amazon S3 buckets.
static async Task<ListBucketsResponse> MyListBucketsAsync(IAmazonS3 s3Client)
{
    return await s3Client.ListBucketsAsync();
}